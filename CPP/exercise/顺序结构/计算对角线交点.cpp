// 给出外多边形边数
// 求所有对角线的焦点
// 任意三条对角线不会相交于一点
// 即每个点一定是由两条不同的对角线相交形成的
// 下面是查的资料：

// （接上面）
// 那就是可以看成有多少个不同的四边形（两条对角线嘛）
// 衍生到该多边形所有顶点中任取四个点有多少种组合
// 根据组合数的公式，（如果你不知道组合数的公式可以这么推）：
// 第一次取可以ｎ个点都是可以取的，第二次取的时候第一个取的点就不能取了，所以只能取(n-1)种，以此类推）
// 由于改变四个点的顺序不会改变对角线，因此是求的组合而不是排列，也就要除以４！，也就是２４
// 于是我们就得到了公式： n (n-1) (n-2) * (n-3) / 24
// 同时为了防止爆掉，但又不想写高精，
// 我们可以采用一种化简的技巧
// 于是原式可以化为:
// n (n-1) / 2 (n-2) / 3 * (n-3) / 4
// 那为什么这样一定是对的呢？难道不会因为除不尽却向下取整而导致错误吗？
// 事实上是一定除得尽的
// 首先n和n-1一定有一个是２的倍数，因此２可以除尽，
// 同理n,n-1,n-2中一定有一个是３的倍数，因此３可以除尽（除掉２只会消除因数２而对３没有影响）
// 同理４也可以除尽

#include<bits/stdc++.h>
using namespace std;
unsigned long long n,ans;
int main()
{
    unsigned long long n;
    cin >> n;

    unsigned long long ans = n * (n-1) / 2 * (n-2) / 3 * (n-3) / 4;
    cout << ans;
    
    return 0;
}